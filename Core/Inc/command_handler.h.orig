/*
 * command_handler.h
 *
 *  Created on: May 9, 2022
 *      Author: liam
 */

#ifndef INC_COMMAND_HANDLER_H_
#define INC_COMMAND_HANDLER_H_
#include "main.h"
#include "arducam.h"
#include "SPI_IT.h"
#include "I2C.h"
#include "housekeeping.h"
#define REG_SYS_CTL0 0x3008 /* System Control */
#define GET_IMAGE_NUM 0x15
#define CAPTURE_IMAGE 0x10
#define COUNT_IMAGES 0x35
#define SENSOR_IDLE 0x30
#define SENSOR_ACTIVE 0x40
#define GET_HK 0x50

extern int format;

extern int VIS_DETECTED;
extern int NIR_DETECTED;

typedef struct __attribute__((__packed__)) currentsense_packet_s {
    uint8_t reg;
    uint16_t value;
} currentsense_packet_t;


void spi_handle_command(uint8_t cmd);
void uart_handle_command(char *cmd);
void take_image();
void transfer_image();
void get_image_length();
void count_images();
void sensor_idle();
void sensor_active();
void get_housekeeping();
void update_sensor_I2C_regs();
void update_current_limits();
void _initalize_sensor(uint8_t sensor);
uint8_t get_image_num(uint8_t hk);
void iterate_image_num();
void uart_get_hk_packet(uint8_t *out);
void print_progress(uint8_t count, uint8_t max);
<<<<<<< HEAD
=======

// void _initalize_sensor();
>>>>>>> refs/remotes/origin/main
void flood_cam_spi();

#endif /* INC_COMMAND_HANDLER_H_ */
